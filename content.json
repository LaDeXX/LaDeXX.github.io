{"posts":[{"title":"我不会简单组合数学","text":"容易发现这个 F(s,l,r)F(s,l,r)F(s,l,r) 事实上就是字符串 sss 中 [l,r][l,r][l,r] 这一段的 1\\mathtt{1}1 的个数减去 0\\mathtt{0}0 的个数。先考虑一个字符串怎么求出分数。 我们需要找到一个分界点 ppp，然后把左边的 FFF 值和右边的 FFF 值乘起来要求最大。观察到左右 FFF 值之和为定值，即整个字符串 1\\mathtt{1}1 的个数减去 0\\mathtt{0}0 的个数。于是猜想当左右 FFF 值各取一半时最大，或者当和为奇数的时候一个是一半上取整，一个是一半下取整是最大。答案确实如此，因为一定能找到一个 ppp，使得左右的 FFF 值满足这个。简单说明一下，能发现 ppp 每向后移动一位，左边的 FFF 值只会加一或减一，变化是连续的，因此一定能找到一个 ppp 使得左边的 FFF 值为一半，此时右边也相应满足。于是记 c0c_0c0​ 表示字符串 0\\mathtt{0}0 的个数，c1c_1c1​ 表示字符串 1\\mathtt{1}1 的个数，则价值为： ⌊(c1−c0)24⌋=(c1−c0)24−(c1−c0) mod 24.\\left\\lfloor\\frac{(c_1-c_0)^2}{4}\\right\\rfloor=\\frac{(c_1-c_0)^2}{4}-\\frac{(c_1-c_0)\\bmod 2}{4}. ⌊4(c1​−c0​)2​⌋=4(c1​−c0​)2​−4(c1​−c0​)mod2​. 你能发现一个序列的价值只和 01\\mathtt{01}01 个数之差有关。我们再来计算原序列的子序列的价值之和。我们考虑记 0\\mathtt{0}0 权值为 −1-1−1，1\\mathtt{1}1 权值为 111，然后一个字符串的价值就是其权值之和平方的下取整。对于一个 c0c_0c0​ 个 0\\mathtt{0}0，c1c_1c1​ 个 1\\mathtt{1}1 的字符串，我们统计它价值为 kkk 的子序列个数。我们枚举他选择了 iii 个 0\\mathtt{0}0，那么此时他选择了 k+ik+ik+i 个 1\\mathtt{1}1，那么总子序列个数就是： ∑i=0c0(c0i)(c1k+i)=∑i=0c0(c0c0−i)(c1k+i)=(c0+c1k+c0)=(nk+c0).\\sum_{i=0}^{c_0}\\binom{c_0}{i}\\binom{c_1}{k+i}=\\sum_{i=0}^{c_0}\\binom{c_0}{c_0-i}\\binom{c_1}{k+i}=\\binom{c_0+c_1}{k+c_0}=\\binom{n}{k+c_0}. i=0∑c0​​(ic0​​)(k+ic1​​)=i=0∑c0​​(c0​−ic0​​)(k+ic1​​)=(k+c0​c0​+c1​​)=(k+c0​n​). 左边的求和是一个范德蒙德卷积的推论。所以这个字符串所以子序列的价值之和就是： ∑i=−c0n−c0(nc0+i)(i24+i mod 24).\\sum_{i=-c_0}^{n-c_0}\\binom{n}{c_0+i}\\left(\\frac{i^2}{4}+\\frac{i\\bmod 2}{4}\\right). i=−c0​∑n−c0​​(c0​+in​)(4i2​+4imod2​). 预处理出所有 c0c_0c0​ 的答案即可 O(1)O(1)O(1) 询问，总复杂度 O(nlog⁡n+q)O(n\\log n+q)O(nlogn+q)，因为这里的处理需要简单 poly，具体可以看官解的代码（Python）。 我是 poly 菜鸡，于是我没有场切，所以我开始推狮子。这里需要的一些组合数性质可以先看 oiwiki。 我们把后面的取模分开处理。先求前面的平方除以四，再求后面的取模求和，这里我们可以把除以四放在最后，所以推式子里面没写。 ∑i=−c0n−c0(nc0+i)i2=∑i=0n(ni)(i−c0)2=∑i=0n(ni)i2−2c0∑i=0n(ni)i+c02∑i=0n(ni)=n(n+1)2n−2−2c0n2n−1+c022n.∑i=−c0n−c0(ni+c0)(i mod 2)=∑i=0n(ni)((i−c0) mod 2)=2n−1.\\begin{aligned} \\sum_{i=-c_0}^{n-c_0}\\binom{n}{c_0+i}i^2&amp;=\\sum_{i=0}^n\\binom{n}{i}(i-c_0)^2\\\\ &amp;=\\sum_{i=0}^n\\binom{n}{i}i^2-2c_0\\sum_{i=0}^n\\binom{n}{i}i+c_0^2\\sum_{i=0}^n\\binom{n}{i}\\\\ &amp;=n(n+1)2^{n-2}-2c_0n2^{n-1}+c_0^22^n.\\\\ \\sum_{i=-c_0}^{n-c_0}\\binom{n}{i+c_0}(i\\bmod 2)&amp;=\\sum_{i=0}^n\\binom{n}{i}\\left((i-c_0)\\bmod 2\\right)=2^{n-1}. \\end{aligned} i=−c0​∑n−c0​​(c0​+in​)i2i=−c0​∑n−c0​​(i+c0​n​)(imod2)​=i=0∑n​(in​)(i−c0​)2=i=0∑n​(in​)i2−2c0​i=0∑n​(in​)i+c02​i=0∑n​(in​)=n(n+1)2n−2−2c0​n2n−1+c02​2n.=i=0∑n​(in​)((i−c0​)mod2)=2n−1.​ 说明一下后面这个式子。他的具体意义就是求出所有 iii 为偶数或奇数的组合数之和。不论奇数还是偶数，组合数之和都是 2n−12^{n-1}2n−1 次方。 证明：考虑二项式定理，我们有 (1+x)n=∑i=0n(ni)xi(1+x)^n=\\sum_{i=0}^n \\binom{n}{i}x^i(1+x)n=∑i=0n​(in​)xi，代入 x=−1x=-1x=−1： (1−1)n=∑i=0n(ni)(−1)i=0.(1-1)^n=\\sum_{i=0}^n \\binom{n}{i}(-1)^i=0. (1−1)n=i=0∑n​(in​)(−1)i=0. 即： ∑i mod 2=0(ni)−∑i mod 2=1(ni)=0\\sum_{i\\bmod 2=0}\\binom{n}{i}-\\sum_{i\\bmod 2=1}\\binom{n}{i}=0 imod2=0∑​(in​)−imod2=1∑​(in​)=0 也就是 iii 为奇数和偶数分别求和是相等的，并且我们知道所有组合数之和是 2n2^n2n，从而 iii 为奇或偶是的和都是 2n−12^{n-1}2n−1。 最后把两个式子加起来。 4Answer=n(n+1)2n−2−2c0n2n−1+c022n+2n−1,Answer=2n−4(n2+n−4c0n−4c02+2).\\begin{aligned} 4\\text{Answer}&amp;=n(n+1)2^{n-2}-2c_0n2^{n-1}+c_0^22^n+2^{n-1},\\\\ \\text{Answer}&amp;=2^{n-4}(n^2+n-4c_0n-4c_0^2+2). \\end{aligned}4AnswerAnswer​=n(n+1)2n−2−2c0​n2n−1+c02​2n+2n−1,=2n−4(n2+n−4c0​n−4c02​+2).​ 然后直接做了，每次询问 O(1)O(1)O(1) 算一下即可。代码就不放了，十分甚至九分的简单罢。","link":"/2025/03/13/CF2077C-sol/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment","link":"/2025/03/13/hello-world/"}],"tags":[],"categories":[],"pages":[]}